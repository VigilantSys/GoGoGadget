#!/bin/bash

# Define variables
RED="\e[31m"
GREEN="32"
BOLDGREEN="\e[1;${GREEN}m"
BOLDRED="\e[1;31m"
ENDCOLOR="\e[0m"
BOLD="\e[1m"
NUMFAILED=0
NUMPASSED=0

# Loop through supported os/arch combos
for line in $(go tool dist list)
do
	IFS=/ read -r os arch <<< $line;

	# Print header
	TEXT="Building for ${BOLD}${os}/${arch}${ENDCOLOR}"
	TEXTLEN=${#TEXT}
	DOTLEN=$(expr 84 - $TEXTLEN)
	echo -n -e "${TEXT}"
	for (( c=1; c<=${DOTLEN}; c++ )); do echo -n '.'; done

	# Build ggg
	output=$(GOOS=$os GOARCH=$arch CGO_ENABLED=0 go build -o ./gogogadget_${os}_${arch} 2>&1);

	# Print results
	if test -f ./gogogadget_${os}_${arch}; then
		echo -e "${BOLDGREEN}PASSED${ENDCOLOR}"	
		rm ./gogogadget_${os}_${arch}
		NUMPASSED=$(expr ${NUMPASSED} + 1)
	else
		echo -e "${BOLDRED}FAILED${ENDCOLOR}"
		echo -e "${RED}${output}${ENDCOLOR}"
		NUMFAILED=$(expr ${NUMFAILED} + 1)
	fi
	echo -e "\n"
done

# Summary
TOTAL=$(expr ${NUMFAILED} + ${NUMPASSED})
echo -e "Attempted ${BOLD}${TOTAL} builds${ENDCOLOR} with ${BOLDGREEN}${NUMPASSED} successes${ENDCOLOR} and ${BOLDRED}${NUMFAILED} failures${ENDCOLOR}"
